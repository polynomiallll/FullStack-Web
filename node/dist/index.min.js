/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./public/js/auth.js":
/*!***************************!*\
  !*** ./public/js/auth.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getCookie: () => (/* binding */ getCookie),
/* harmony export */   handleAuth: () => (/* binding */ handleAuth)
/* harmony export */ });
function getCookie(name) {
  var cookieArr = document.cookie.split("; ");
  for (var i = 0; i < cookieArr.length; i++) {
    var cookiePair = cookieArr[i].split("=");
    if (name === cookiePair[0]) {
      return decodeURIComponent(cookiePair[1]);
    }
  }
  return null;
}
function handleAuth() {
  const loginButton = document.getElementById("loginButton");
  const loggedInUsername = document.getElementById("loggedInUsername");
  const SignOutButton = document.getElementById("SignOutButton");
  SignOutButton.onclick = function () {
    document.cookie = "username=; path=/;";
    location.reload();
  };
  const username = getCookie("username");
  if (username != null && username != "") {
    // Hide login button
    loginButton.style.display = "none";
    // Show username
    loggedInUsername.style.display = "block";
    loggedInUsername.innerHTML = "Welcome: " + username;
    // Show SignOut button
    SignOutButton.style.display = "block";
  }
}

/***/ }),

/***/ "./public/js/theme.js":
/*!****************************!*\
  !*** ./public/js/theme.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   applyMarkdownTheme: () => (/* binding */ applyMarkdownTheme),
/* harmony export */   applyTheme: () => (/* binding */ applyTheme),
/* harmony export */   initializeTheme: () => (/* binding */ initializeTheme)
/* harmony export */ });
function applyTheme(theme) {
  const body = document.body;
  if (theme === "light") {
    body.classList.add("light-theme");
    body.classList.remove("dark-theme");
  } else if (theme === "dark") {
    body.classList.add("dark-theme");
    body.classList.remove("light-theme");
  } else {
    const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");
    if (prefersDarkScheme.matches) {
      body.classList.add("dark-theme");
      body.classList.remove("light-theme");
    } else {
      body.classList.add("light-theme");
      body.classList.remove("dark-theme");
    }
  }
}
function applyMarkdownTheme(theme) {
  // Get all link elements
  const links = document.getElementsByTagName('link');

  // Loop through all link elements
  for (let i = 0; i < links.length; i++) {
    const link = links[i];
    const href = link.getAttribute('href');

    // If link is for github-markdown-css, remove it
    if (href && href.includes('github-markdown-css')) {
      link.parentNode.removeChild(link);
    }
  }

  // Add new link element
  if (theme === 'dark') {
    const darkCss = document.createElement('link');
    darkCss.setAttribute('rel', 'stylesheet');
    darkCss.setAttribute('href', 'https://cdn.jsdelivr.net/npm/github-markdown-css/github-markdown-dark.css');
    document.head.appendChild(darkCss);
  } else if (theme === 'light') {
    const lightCss = document.createElement('link');
    lightCss.setAttribute('rel', 'stylesheet');
    lightCss.setAttribute('href', 'https://cdn.jsdelivr.net/npm/github-markdown-css/github-markdown-light.css');
    document.head.appendChild(lightCss);
  } else {
    const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");
    if (prefersDarkScheme.matches) {
      const darkCss = document.createElement('link');
      darkCss.setAttribute('rel', 'stylesheet');
      darkCss.setAttribute('href', 'https://cdn.jsdelivr.net/npm/github-markdown-css/github-markdown-dark.css');
      document.head.appendChild(darkCss);
    } else {
      const lightCss = document.createElement('link');
      lightCss.setAttribute('rel', 'stylesheet');
      lightCss.setAttribute('href', 'https://cdn.jsdelivr.net/npm/github-markdown-css/github-markdown-light.css');
      document.head.appendChild(lightCss);
    }
  }
}
function initializeTheme() {
  const themeSelect = document.getElementById("themeSelect");
  themeSelect.addEventListener("change", event => {
    const selectedTheme = event.target.value;
    applyTheme(selectedTheme);
    applyMarkdownTheme(selectedTheme);
  });
  applyTheme();
  applyMarkdownTheme();
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!****************************!*\
  !*** ./public/js/index.js ***!
  \****************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ "./public/js/auth.js");
/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./theme */ "./public/js/theme.js");

(0,_auth__WEBPACK_IMPORTED_MODULE_0__.handleAuth)();

(0,_theme__WEBPACK_IMPORTED_MODULE_1__.initializeTheme)();
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,